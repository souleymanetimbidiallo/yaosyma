package com.yaosyma.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StoreAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStoreAllPropertiesEquals(Store expected, Store actual) {
        assertStoreAutoGeneratedPropertiesEquals(expected, actual);
        assertStoreAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStoreAllUpdatablePropertiesEquals(Store expected, Store actual) {
        assertStoreUpdatableFieldsEquals(expected, actual);
        assertStoreUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStoreAutoGeneratedPropertiesEquals(Store expected, Store actual) {
        assertThat(expected)
            .as("Verify Store auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStoreUpdatableFieldsEquals(Store expected, Store actual) {
        assertThat(expected)
            .as("Verify Store relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStoreUpdatableRelationshipsEquals(Store expected, Store actual) {}
}
